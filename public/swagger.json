{
    "openapi": "3.1.0",
    "info": {
        "title": "Perfect Match API Documentation",
        "version": "1.0.0"
    },
    "components": {
        "schemas": {
            "Profile": {
                "type": "object",
                "properties": {
                    "complete": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "genderPref": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "age": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "city": {
                        "type": "string"
                    },
                    "race": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "year": {
                        "type": "string"
                    },
                    "college": {
                        "type": "string"
                    },
                    "major": {
                        "type": "string"
                    },
                    "commitment": {
                        "type": "string"
                    },
                    "relationshipType": {
                        "type": "string"
                    },
                    "agePref": {
                        "type": "object",
                        "properties": {
                            "youngest": {
                                "type": "integer"
                            },
                            "oldest": {
                                "type": "integer"
                            }
                        }
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "describeYourself": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    }
                }
            },
            "Survey": {
                "type": "object",
                "properties": {
                    "complete": {
                        "type": "boolean"
                    },
                    "p1": {
                        "type": "string"
                    },
                    "p2": {
                        "type": "string"
                    },
                    "p3": {
                        "type": "string"
                    },
                    "p4": {
                        "type": "string"
                    },
                    "p5": {
                        "type": "string"
                    },
                    "p6": {
                        "type": "string"
                    },
                    "p7": {
                        "type": "string"
                    },
                    "p8": {
                        "type": "string"
                    },
                    "p9": {
                        "type": "string"
                    },
                    "p10": {
                        "type": "string"
                    },
                    "p11": {
                        "type": "string"
                    },
                    "p12": {
                        "type": "string"
                    },
                    "p13": {
                        "type": "string"
                    },
                    "p14": {
                        "type": "string"
                    },
                    "p15": {
                        "type": "string"
                    },
                    "p16": {
                        "type": "string"
                    },
                    "p17": {
                        "type": "string"
                    },
                    "p18": {
                        "type": "string"
                    },
                    "p19": {
                        "type": "string"
                    },
                    "generalPersonality": {
                        "type": "string"
                    },
                    "introvert": {
                        "type": "number"
                    },
                    "introvert_same": {
                        "type": "string"
                    },
                    "easygoing": {
                        "type": "number"
                    },
                    "easygoing_same": {
                        "type": "string"
                    },
                    "numdated": {
                        "type": "number"
                    },
                    "longestrelationship": {
                        "type": "number"
                    },
                    "ricePurity": {
                        "type": "string"
                    },
                    "pairedwith": {
                        "type": "string"
                    },
                    "apps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "politics": {
                        "type": "number"
                    },
                    "politically_active": {
                        "type": "number"
                    },
                    "habits": {
                        "type": "object",
                        "properties": {
                            "drinking": {
                                "type": "string"
                            },
                            "smoking": {
                                "type": "string"
                            },
                            "weed": {
                                "type": "string"
                            },
                            "other": {
                                "type": "string"
                            }
                        }
                    },
                    "partner_habits": {
                        "type": "object",
                        "properties": {
                            "drinking": {
                                "type": "string"
                            },
                            "smoking": {
                                "type": "string"
                            },
                            "weed": {
                                "type": "string"
                            },
                            "other": {
                                "type": "string"
                            }
                        }
                    },
                    "deal_breakers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "partner_deal_breakers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "optIn": {
                        "type": "boolean"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "survey": {
                        "$ref": "#/components/schemas/Survey"
                    },
                    "crushes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "forbidden": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matches": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "objectId"
                        }
                    },
                    "matchReviews": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "objectId"
                        }
                    },
                    "collab": {
                        "type": "object",
                        "properties": {
                            "mutual": {
                                "type": "boolean"
                            }
                        }
                    },
                    "feedback": {
                        "$ref": "#/components/schemas/SurveyFeedback"
                    }
                }
            },
            "Match": {
                "type": "object",
                "properties": {
                    "partnerAId": {
                        "type": "string",
                        "format": "objectId"
                    },
                    "partnerBId": {
                        "type": "string",
                        "format": "objectId"
                    },
                    "partnerAFeedback": {
                        "type": "object",
                        "properties": {
                            "overallRating": {
                                "type": "number"
                            },
                            "topReasonForRating": {
                                "type": "string"
                            },
                            "metMatch": {
                                "type": "boolean"
                            },
                            "numberOfDates": {
                                "type": "number"
                            },
                            "inRelationshipWithMatch": {
                                "type": "boolean"
                            },
                            "additionalComments": {
                                "type": "string"
                            },
                            "dateSubmitted": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    },
                    "partnerBFeedback": {
                        "type": "object",
                        "properties": {
                            "overallRating": {
                                "type": "number"
                            },
                            "topReasonForRating": {
                                "type": "string"
                            },
                            "metMatch": {
                                "type": "boolean"
                            },
                            "numberOfDates": {
                                "type": "number"
                            },
                            "inRelationshipWithMatch": {
                                "type": "boolean"
                            },
                            "additionalComments": {
                                "type": "string"
                            },
                            "dateSubmitted": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    },
                    "overallStatus": {
                        "type": "string",
                        "enum": ["pending", "complete", "partial"]
                    },
                    "poked": {
                        "type": "boolean"
                    },
                    "mutual": {
                        "type": "boolean"
                    },
                    "score": {
                        "type": "number"
                    },
                    "superMatch": {
                        "type": "boolean"
                    }
                }
            },
            "MatchFeedback": {
                "type": "object",
                "properties": {
                    "overallRating": {
                        "type": "number"
                    },
                    "topReasonForRating": {
                        "type": "string"
                    },
                    "metMatch": {
                        "type": "boolean"
                    },
                    "numberOfDates": {
                        "type": "number"
                    },
                    "inRelationshipWithMatch": {
                        "type": "boolean"
                    },
                    "additionalComments": {
                        "type": "string"
                    },
                    "dateSubmitted": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SurveyFeedback": {
                "type": "object",
                "properties": {
                    "bad": {
                        "type": "boolean"
                    },
                    "opportunities": {
                        "type": "boolean"
                    },
                    "fun": {
                        "type": "boolean"
                    },
                    "joy": {
                        "type": "boolean"
                    },
                    "memories": {
                        "type": "boolean"
                    },
                    "anticipation": {
                        "type": "boolean"
                    },
                    "categoryRanking": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "surveyFeedback": {
                        "type": "string"
                    },
                    "otherValentinesDayImpact": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    }
                }
            },
            "Review": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "objectId"
                    },
                    "title": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["pending", "approved", "rejected"]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        }
    },
    "paths": {
        "/api/review/{mid}": {
            "post": {
                "summary": "Update match review",
                "description": "Updates match review details for a given match ID.",
                "operationId": "updateMatchReview",
                "parameters": [
                    {
                        "name": "mid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchFeedback"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Match review updated successfully"
                    },
                    "400": {
                        "description": "Bad request, invalid inputs"
                    },
                    "401": {
                        "description": "Unauthorized - user not authenticated"
                    }
                }
            }
        },
        "/api/reviews": {
            "get": {
                "summary": "Get reviews",
                "description": "Retrieves reviews with optional filtering by status.",
                "operationId": "getReviews",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["pending", "approved", "existing"]
                        },
                        "description": "Filter reviews by status"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - admin access required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "summary": "Create review",
                "description": "Creates a new review submission.",
                "operationId": "createReview",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["title", "body", "author"],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "body": {
                                        "type": "string"
                                    },
                                    "author": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/reviews/count": {
            "get": {
                "summary": "Get review count",
                "description": "Returns the count of reviews, optionally filtered by status.",
                "operationId": "getReviewCount",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["pending", "approved"]
                        },
                        "description": "Filter count by review status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review count retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 42
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - admin access required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/reviews/existing": {
            "get": {
                "summary": "Get approved reviews",
                "description": "Retrieves approved/existing reviews visible on the site.",
                "operationId": "getApprovedReviews",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Approved reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Review"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/reviews/{id}": {
            "get": {
                "summary": "Get review by ID",
                "description": "Retrieves a specific review by its ID.",
                "operationId": "getReviewById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "401": {
                        "description": "Unauthorized - admin access required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "patch": {
                "summary": "Update review status",
                "description": "Updates the status of a review (approve/reject). Admin only.",
                "operationId": "updateReviewStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["action"],
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": ["approve", "reject"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid action"
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "401": {
                        "description": "Unauthorized - admin access required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "summary": "Delete review",
                "description": "Deletes a review. Admin only.",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully"
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "401": {
                        "description": "Unauthorized - admin access required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/count": {
            "get": {
                "summary": "Retrieve total user count",
                "description": "Returns the total number of users or filters based on the `status` query parameter.",
                "operationId": "getUserCount",
                "parameters": [
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": ["opted_in", "profiled", "surveyed"],
                            "example": "opted_in"
                        },
                        "required": false,
                        "description": "Filter users by status:\n  - `opted_in`: Count of users who have opted in.\n  - `profiled`: Count of users who have completed their profile.\n  - `surveyed`: Count of users who have completed their survey.\n  - Undefined: Total count of all users."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total user count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 1234
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/feedback": {
            "post": {
                "summary": "Update user feedback",
                "description": "Updates user feedback and returns the updated user profile.",
                "operationId": "updateUserFeedback",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SurveyFeedback"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User feedback updated and profile returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid session"
                    }
                }
            }
        },
        "/api/matches": {
            "get": {
                "summary": "Retrieve user matches",
                "description": "Retrieves matches for the authenticated user.",
                "operationId": "getUserMatches",
                "responses": {
                    "200": {
                        "description": "List of user matches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Match"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/optIn": {
            "post": {
                "summary": "Update opt-in status",
                "description": "Updates the user's opt-in status for receiving updates or newsletters.",
                "operationId": "updateOptInStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["optIn"],
                                "properties": {
                                    "optIn": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Opt-in status updated"
                    },
                    "400": {
                        "description": "Bad request or invalid session"
                    },
                    "401": {
                        "description": "Unauthorized - user not authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "summary": "Retrieve user profile",
                "description": "Returns the user's profile details after authentication.",
                "responses": {
                    "200": {
                        "description": "User profile data retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access."
                    }
                }
            },
            "post": {
                "summary": "Update user profile",
                "description": "Updates the user's profile details after authentication.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Profile"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "User profile updated successfully.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Profile"
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized access."
                }
            }
        },
        "/api/poke": {
            "post": {
                "summary": "Poke a match",
                "description": "Sends a poke email to initiate conversation with a match.",
                "operationId": "pokeMatch",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["matchEmail"],
                                "properties": {
                                    "matchEmail": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Match poked successfully!"
                    },
                    "400": {
                        "description": "Bad request, invalid inputs."
                    },
                    "401": {
                        "description": "Unauthorized - user not authenticated"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/restrict": {
            "post": {
                "summary": "Update user's restrictions",
                "description": "Updates the user's list of crushes and forbidden users after authentication.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Restriction list updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access."
                    }
                }
            }
        },
        "/api/survey": {
            "post": {
                "summary": "Update survey",
                "description": "Updates the user's survey details after authentication.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Survey"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Survey updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Survey"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access."
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Retrieve list of users",
                "description": "Returns a paginated list of users after verifying admin privileges. Supports search and pagination.",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "description": "Number of users per page"
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search term to filter users by name or email"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access."
                    },
                    "403": {
                        "description": "Access forbidden - admin privileges required."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/mutual/matches": {
            "post": {
                "summary": "Fetch mutual verified matches",
                "description": "This endpoint fetches mutual verified matches for a user with a valid API key, email, and OTP. Requires x-api-key header.",
                "operationId": "fetchMutualMatches",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key for authentication"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["apiKey", "email", "otp"],
                                "properties": {
                                    "apiKey": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "otp": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with mutual matches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Match"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid inputs"
                    },
                    "401": {
                        "description": "Unauthorized - invalid API key"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/mutual/otp": {
            "post": {
                "summary": "Request One-Time Password",
                "description": "Requests an OTP for a given email address and validates the API token. Requires x-api-key header.",
                "operationId": "requestOTP",
                "parameters": [
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "API key for authentication"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "apiKey"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "apiKey": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP request successful"
                    },
                    "400": {
                        "description": "Bad request, invalid inputs"
                    },
                    "401": {
                        "description": "Unauthorized - invalid API key"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/admin": {
            "get": {
                "summary": "Verify admin status",
                "description": "Checks if the authenticated user has admin privileges.",
                "responses": {
                    "200": {
                        "description": "User is authenticated and admin status is returned. True if admin, false otherwise.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": false
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
